global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@bigdata-platform.local'
  smtp_auth_username: ''
  smtp_auth_password: ''
  slack_api_url: '${SLACK_WEBHOOK_URL}'

# Templates for alert notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration
route:
  group_by: ['alertname', 'service', 'severity']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'default-receiver'
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 5m
      routes:
        - match:
            service: fraud-detection
          receiver: 'fraud-critical'
        - match:
            service: etl
          receiver: 'etl-critical'
        - match:
            service: kafka
          receiver: 'kafka-critical'

    # Warning alerts - standard notification
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      repeat_interval: 2h

    # Info alerts - low priority
    - match:
        severity: info
      receiver: 'info-alerts'
      group_wait: 5m
      repeat_interval: 12h

    # Service-specific routing
    - match:
        service: fraud-detection
      receiver: 'fraud-team'
      routes:
        - match:
            alertname: ModelDriftDetected
          receiver: 'ml-team'
        - match:
            alertname: HighFraudRate
          receiver: 'fraud-critical'

    - match:
        service: data-quality
      receiver: 'data-team'

    - match:
        service: kafka
      receiver: 'platform-team'

# Inhibition rules to reduce noise
inhibit_rules:
  # Inhibit warning if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['service', 'instance']

  # Inhibit info if warning is firing
  - source_match:
      severity: 'warning'
    target_match:
      severity: 'info'
    equal: ['service', 'instance']

  # Service-specific inhibitions
  - source_match:
      alertname: 'ServiceDown'
    target_match_re:
      alertname: '(HighErrorRate|SlowResponse|.*Lag)'
    equal: ['service']

# Receivers configuration
receivers:
  # Default receiver
  - name: 'default-receiver'
    email_configs:
      - to: 'ops-team@company.com'
        subject: '[BigData Platform] {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}{{ .Name }}={{ .Value }} {{ end }}
          {{ end }}

  # Critical alerts
  - name: 'critical-alerts'
    email_configs:
      - to: 'critical-alerts@company.com'
        subject: '[CRITICAL] BigData Platform Alert'
        body: |
          üö® CRITICAL ALERT üö®
          {{ range .Alerts }}
          Service: {{ .Labels.service }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}
    slack_configs:
      - channel: '#critical-alerts'
        title: 'üö® Critical BigData Platform Alert'
        text: |
          {{ range .Alerts }}
          *Service:* {{ .Labels.service }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        color: 'danger'

  # Fraud detection critical alerts
  - name: 'fraud-critical'
    email_configs:
      - to: 'fraud-team@company.com,security-team@company.com'
        subject: '[FRAUD ALERT] Critical Issue Detected'
        body: |
          üö® FRAUD DETECTION CRITICAL ALERT üö®
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          Runbook: {{ .Annotations.runbook_url }}
          {{ end }}
    slack_configs:
      - channel: '#fraud-alerts'
        title: 'üö® Fraud Detection Critical Alert'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Severity:* CRITICAL
          {{ end }}
        color: 'danger'

  # ETL critical alerts
  - name: 'etl-critical'
    email_configs:
      - to: 'data-engineering@company.com'
        subject: '[ETL CRITICAL] Data Pipeline Issue'
    slack_configs:
      - channel: '#data-engineering'
        title: 'üö® ETL Critical Alert'
        color: 'danger'

  # Kafka critical alerts
  - name: 'kafka-critical'
    email_configs:
      - to: 'platform-team@company.com'
        subject: '[KAFKA CRITICAL] Streaming Platform Issue'
    slack_configs:
      - channel: '#platform-alerts'
        title: 'üö® Kafka Critical Alert'
        color: 'danger'

  # Warning alerts
  - name: 'warning-alerts'
    email_configs:
      - to: 'monitoring@company.com'
        subject: '[WARNING] BigData Platform'
    slack_configs:
      - channel: '#monitoring'
        title: '‚ö†Ô∏è Platform Warning'
        color: 'warning'

  # Info alerts
  - name: 'info-alerts'
    slack_configs:
      - channel: '#monitoring'
        title: '‚ÑπÔ∏è Platform Information'
        color: 'good'

  # Team-specific receivers
  - name: 'fraud-team'
    email_configs:
      - to: 'fraud-team@company.com'
        subject: '[Fraud Detection] Alert'
    slack_configs:
      - channel: '#fraud-detection'
        title: 'Fraud Detection Alert'

  - name: 'ml-team'
    email_configs:
      - to: 'ml-team@company.com'
        subject: '[ML Model] Alert'
    slack_configs:
      - channel: '#ml-engineering'
        title: 'ML Model Alert'

  - name: 'data-team'
    email_configs:
      - to: 'data-team@company.com'
        subject: '[Data Quality] Alert'
    slack_configs:
      - channel: '#data-quality'
        title: 'Data Quality Alert'

  - name: 'platform-team'
    email_configs:
      - to: 'platform-team@company.com'
        subject: '[Platform] Alert'
    slack_configs:
      - channel: '#platform'
        title: 'Platform Alert' 